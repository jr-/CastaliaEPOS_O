# ********************************************************************************
# *  Copyright (c) Federal University of Para, brazil - 2011                     *
# *  Developed at the Research Group on Computer Network and Multimedia          *
# *  Communication (GERCOM)                                                      *
# *  All rights reserved						         *
# *  								                 *
# *  Permission to use, copy, modify, and distribute this protocol and its       *             
# *  documentation for any purpose, without fee, and without written             *
# *  agreement is hereby granted, provided that the above copyright notice,      *
# *  and the author appear in all copies of this protocol.                       * 
# *  							                         * 
# *  Module:   LEACH Clustering Protocol for Castalia Simulator                  * 
# *  Version:  0.2                                                               * 
# *  Author(s): Adonias Pires <adonias@ufpa.br>                                  * 
# *             Claudio Silva <claudio.silva@itec.ufpa.br>                       *
# *******************************************************************************/

[General]

########################
## Network          ####
########################
include ../Parameters/Castalia.ini
sim-time-limit = 3600s
SN.field_x = 200						#40
SN.field_y = 200						#10
SN.numNodes = 20
SN.node[0].xCoor = 0
SN.node[0].yCoor = 0
SN.node[1].xCoor = 10
SN.node[1].yCoor = 0
SN.node[2].xCoor = 20
SN.node[2].yCoor = 0
SN.node[3].xCoor = 30
SN.node[3].yCoor = 0
SN.node[4].xCoor = 40
SN.node[4].yCoor = 0
SN.node[5].xCoor = 0
SN.node[5].yCoor = 10
SN.node[6].xCoor = 0
SN.node[6].yCoor = 20
SN.node[7].xCoor = 0
SN.node[7].yCoor = 30
SN.node[8].xCoor = 0
SN.node[8].yCoor = 40
SN.node[9].xCoor = 15
SN.node[9].yCoor = 0
SN.node[10].xCoor = 25
SN.node[10].yCoor = 0
SN.node[11].xCoor = 16
SN.node[11].yCoor = 0
SN.node[12].xCoor = 0
SN.node[12].yCoor = 5
SN.node[13].xCoor = 13
SN.node[13].yCoor = 0
SN.node[14].xCoor = 9
SN.node[14].yCoor = 0
SN.node[15].xCoor = 32
SN.node[15].yCoor = 0
SN.node[16].xCoor = 19
SN.node[16].yCoor = 0
SN.node[17].xCoor = 17
SN.node[17].yCoor = 0
SN.node[18].xCoor = 18
SN.node[18].yCoor = 0
SN.node[19].xCoor = 19
SN.node[19].yCoor = 0
##SN.deployment = "[0..99]->4x5"
#SN.node[0].xCoor = 0
#SN.node[0].yCoor = 0
#SN.node[1].xCoor = 10
#SN.node[1].yCoor = 0
#SN.node[2].xCoor = 20
#SN.node[2].yCoor = 0
#SN.node[3].xCoor = 30
#SN.node[3].yCoor = 0
#SN.node[4].xCoor = 40
#SN.node[4].yCoor = 0
#SN.node[5].xCoor = 50
#SN.node[5].yCoor = 0
#SN.node[6].xCoor = 60
#SN.node[6].yCoor = 0
#SN.node[7].xCoor = 70
#SN.node[7].yCoor = 0
#SN.node[8].xCoor = 80
#SN.node[8].yCoor = 0
#SN.node[9].xCoor = 90
#SN.node[9].yCoor = 0
#SN.node[10].xCoor = 100
#SN.node[10].yCoor = 0
#SN.node[11].xCoor = 110
#SN.node[11].yCoor = 0
#SN.node[12].xCoor = 120
#SN.node[12].yCoor = 0
#SN.node[13].xCoor = 130
#SN.node[13].yCoor = 0
#SN.node[14].xCoor = 140
#SN.node[14].yCoor = 0
#SN.node[15].xCoor = 150
#SN.node[15].yCoor = 0
#SN.node[16].xCoor = 160
#SN.node[16].yCoor = 0
#SN.node[17].xCoor = 170
#SN.node[17].yCoor = 0
#SN.node[18].xCoor = 180
#SN.node[18].yCoor = 0
#SN.node[19].xCoor = 190
#SN.node[19].yCoor = 0

########################
## Traces           ####
########################
SN.wirelessChannel.collectTraceInfo = false
SN.node[*].Communication.Radio.collectTraceInfo = false
SN.node[*].Communication.MAC.collectTraceInfo = false
SN.node[*].Communication.Routing.collectTraceInfo = false
SN.node[*].Application.collectTraceInfo = false
SN.node[*].SensorManager.collectTraceInfo = false
SN.node[*].ResourceManager.collectTraceInfo = false

########################
## MAC              ####
########################

#include ../Parameters/MAC/CSMA.ini
#include ../Parameters/MAC/CSMA15_4.ini
#include ../Parameters/MAC/802_15_4.ini
#SN.node[*].Communication.MACProtocolName = "TunableMAC"
#SN.node[*].Communication.MAC.dutyCycle = 0.01
#SN.node[*].Communication.MAC.randomTxOffset = 0
#SN.node[*].Communication.MAC.backoffType = 2

#SN.node[*].Communication.MACProtocolName = "IEEE802154" 

SN.node[*].Communication.MACProtocolName = "Basic802154"
SN.node[0].Communication.MAC.isFFD = true
SN.node[0].Communication.MAC.isPANCoordinator = true
## Ajustando os par칙metros do r치dio no MAC
SN.node[*].Communication.MAC.phyDataRate = 250       ##como definido no CC2420: 250
SN.node[*].Communication.MAC.phyBitsPerSymbol = 4    ## como definindo no CC2420: 4
SN.node[*].Communication.MAC.macBufferSize = 2048
SN.node[*].Communication.MAC.beaconOrder = 11
SN.node[*].Communication.MAC.frameOrder = 5

#SN.node[*].Communication.MACProtocolName = "Basic802154"
#SN.node[0].Communication.MAC.isFFD = true
#SN.node[0].Communication.MAC.isPANCoordinator = true
### Ajustando os par칙metros do r치dio no MAC
#SN.node[*].Communication.MAC.phyDataRate = 250       ##como definido no CC2420: 250
#SN.node[*].Communication.MAC.phyBitsPerSymbol = 4    ## como definindo no CC2420: 4
#SN.node[*].Communication.MAC.macBufferSize = 1024
#SN.node[*].Communication.MAC.beaconOrder = 11
#SN.node[*].Communication.MAC.frameOrder = 5

########################
## Application      ####
########################
SN.node[*].ApplicationName = "ThroughputTest"
SN.node[*].Application.startupDelay = 30
SN.node[0].Application.latencyHistogramMax = 600
SN.node[0].Application.latencyHistogramBuckets = 30
SN.node[*].Application.tempolimite = 3000
SN.node[0].Application.sink = true
SN.node[0].Application.packet_rate = 0
SN.node[1..999].Application.packet_rate = 30
SN.node[*].Application.packet_limit = -1
SN.node[*].Application.constantDataPayload = 4

########################
## Wireless Channel ####
########################
SN.wirelessChannel.onlyStaticNodes = true
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.pathLossExponent = 2.0	# Free Space 

########################
## Radio           #####
########################
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].Communication.Radio.symbolsForRSSI = 16
SN.node[*].Communication.Radio.TxOutputPower = "0dBm"
SN.node[*].Communication.Radio.bufferSize = 2048

########################
## Configs         #####
########################
[Config TSTP]

SN.node[*].Communication.RoutingProtocolName = "TSTP"
SN.node[*].Communication.MACProtocolName = "TSTPMAC"
SN.node[*].Communication.MAC.dutyCycle = 0.015625 # 0.015625
SN.node[0].Communication.Routing.sink = true

output-scalar-file = ${resultdir}/TSTP-${runnumber}.sca
output-vector-file = ${resultdir}/TSTP-${runnumber}.vec

[Config AODV]

SN.node[*].Communication.RoutingProtocolName = "AodvRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048

#SN.node[*].Communication.Routing.maxNetFrameSize = 10000
#SN.node[*].Communication.Routing.netDataFrameOverhead = 0
#SN.node[*].Communication.Routing.netBufferSize = 800
#
#SN.node[*].Communication.Routing.activeRouteTimeout = 100000
#SN.node[*].Communication.Routing.allowedHelloLoss = 4
#SN.node[*].Communication.Routing.helloInterval = 25000
#SN.node[*].Communication.Routing.localAddTTL = 1
#SN.node[*].Communication.Routing.netDiameter = 100
#SN.node[*].Communication.Routing.nodeTraversalTime = 60000
#SN.node[*].Communication.Routing.rerrRatelimit = 100
#SN.node[*].Communication.Routing.rreqRetries = 100
#SN.node[*].Communication.Routing.rreqRatelimit = 100
#SN.node[*].Communication.Routing.timeoutBuffer = 1000
#SN.node[*].Communication.Routing.ttlStart = 1
#SN.node[*].Communication.Routing.ttlIncrement = 1
#SN.node[*].Communication.Routing.ttlThreshould = 1000
#SN.node[*].Communication.Routing.netDiameter = 100

output-scalar-file = ${resultdir}/AODV-${runnumber}.sca
output-vector-file = ${resultdir}/AODV-${runnumber}.vec

[Config AODVT]

# ACTIVE_ROUTE_TIMEOUT parameter value MUST be more than the value (ALLOWED_HELLO_LOSS * HELLO_INTERVAL)

# NET_DIAMETER measures the maximum possible number of hops between two
# nodes in the network.  NODE_TRAVERSAL_TIME is a conservative estimate
# of the average one hop traversal time for packets and should include
# queuing delays, interrupt processing times and transfer times.
# ACTIVE_ROUTE_TIMEOUT SHOULD be set to a longer value (at least 10,000
# milliseconds) if link-layer indications are used to detect link
# breakages such as in IEEE 802.11 [5] standard.

SN.node[*].Communication.RoutingProtocolName = "AodvTestRouting"

#SN.node[*].Communication.Routing.maxNetFrameSize = default (0); // 0 or less means no limit		
SN.node[*].Communication.Routing.netBufferSize = 2048
#SN.node[*].Communication.Routing.netDataFrameOverhead = default (10);
#SN.node[*].Communication.Routing.shortestDelay = default (false);// by defaut the shortest_path mode is used
#
#SN.node[*].Communication.Routing.activeRouteTimeout = 3000000
#SN.node[*].Communication.Routing.allowedHelloLoss = default(4);  // (default 4)
#SN.node[*].Communication.Routing.helloInterval = 25000
#SN.node[*].Communication.Routing.localAddTTL = 1
#SN.node[*].Communication.Routing.netDiameter = 20
#SN.node[*].Communication.Routing.nodeTraversalTime = 4000
#SN.node[*].Communication.Routing.rerrRatelimit = default(10);
#SN.node[*].Communication.Routing.rreqRetries = default(2);
#SN.node[*].Communication.Routing.rreqRatelimit = default(10);
#SN.node[*].Communication.Routing.timeoutBuffer = default(2);
#SN.node[*].Communication.Routing.ttlStart = 1
#SN.node[*].Communication.Routing.ttlIncrement = 1
#SN.node[*].Communication.Routing.ttlThreshould = 100
#SN.node[*].Communication.Routing.frameSize = default(155);// S_MAC fram size

#SN.node[*].Communication.MACProtocolName = "TMAC"
output-scalar-file = ${resultdir}/AODVT-${runnumber}.sca
output-vector-file = ${resultdir}/AODVT-${runnumber}.vec


[Config LEACH]

SN.node[*].Communication.RoutingProtocolName = "LeachRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[0].Communication.Routing.isSink = true
SN.node[*].Communication.Routing.slotLength = 0.2
SN.node[*].Communication.Routing.roundLength = 20s
SN.node[*].Communication.Routing.percentage = 0.05
SN.node[*].Communication.Routing.powersConfig = xmldoc("powersConfig.xml")

output-scalar-file = ${resultdir}/LEACH-${runnumber}.sca
output-vector-file = ${resultdir}/LEACH-${runnumber}.vec


[Config LABILE]

SN.node[*].Communication.RoutingProtocolName = "LabileRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.hopCountThreshould = 20
output-scalar-file = ${resultdir}/LABILE-${runnumber}.sca
output-vector-file = ${resultdir}/LABILE-${runnumber}.vec


[Config REL]

SN.node[*].Communication.RoutingProtocolName = "RELRouting"
SN.node[*].Communication.Routing.netBufferSize = 2048
SN.node[*].Communication.Routing.hopCountThreshould = 20
output-scalar-file = ${resultdir}/REL-${runnumber}.sca
output-vector-file = ${resultdir}/REL-${runnumber}.vec
