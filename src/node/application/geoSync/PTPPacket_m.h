//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/application/geoSync/PTPPacket.msg.
//

#ifndef _PTPPACKET_M_H_
#define _PTPPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "GeoSyncPacketType_m.h"
// }}

/**
 * Class generated from <tt>src/node/application/geoSync/PTPPacket.msg:22</tt> by nedtool.
 * <pre>
 * packet PTPPacket extends GeoSyncPacketType
 * {
 *     int ptpType;
 *     int64 timeStamp;
 * }
 * </pre>
 */
class PTPPacket : public ::GeoSyncPacketType
{
  protected:
    int ptpType_var;
    int64 timeStamp_var;

  private:
    void copy(const PTPPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PTPPacket&);

  public:
    PTPPacket(const char *name=NULL, int kind=0);
    PTPPacket(const PTPPacket& other);
    virtual ~PTPPacket();
    PTPPacket& operator=(const PTPPacket& other);
    virtual PTPPacket *dup() const {return new PTPPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPtpType() const;
    virtual void setPtpType(int ptpType);
    virtual int64 getTimeStamp() const;
    virtual void setTimeStamp(int64 timeStamp);
};

inline void doPacking(cCommBuffer *b, PTPPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PTPPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _PTPPACKET_M_H_

