//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/REL/RELRoutingDataPacket.msg.
//

#ifndef _RELROUTINGDATAPACKET_M_H_
#define _RELROUTINGDATAPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "PacketId_m.h"
// }}

/**
 * Class generated from <tt>src/node/communication/routing/REL/RELRoutingDataPacket.msg:20</tt> by nedtool.
 * <pre>
 * //id =6
 * packet RELDataPacket extends PacketId
 * {
 *     string destinationREL;
 * }
 * </pre>
 */
class RELDataPacket : public ::PacketId
{
  protected:
    opp_string destinationREL_var;

  private:
    void copy(const RELDataPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RELDataPacket&);

  public:
    RELDataPacket(const char *name=NULL, int kind=0);
    RELDataPacket(const RELDataPacket& other);
    virtual ~RELDataPacket();
    RELDataPacket& operator=(const RELDataPacket& other);
    virtual RELDataPacket *dup() const {return new RELDataPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getDestinationREL() const;
    virtual void setDestinationREL(const char * destinationREL);
};

inline void doPacking(cCommBuffer *b, RELDataPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, RELDataPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _RELROUTINGDATAPACKET_M_H_

