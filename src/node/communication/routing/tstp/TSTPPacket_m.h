//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/tstp/TSTPPacket.msg.
//

#ifndef _TSTPPACKET_M_H_
#define _TSTPPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "RoutingPacket_m.h"
// }}

/**
 * Class generated from <tt>src/node/communication/routing/tstp/TSTPPacket.msg:20</tt> by nedtool.
 * <pre>
 * packet TSTPPacket extends RoutingPacket
 * {
 *     char data[127];
 * }
 * </pre>
 */
class TSTPPacket : public ::RoutingPacket
{
  protected:
    char data_var[127];

  private:
    void copy(const TSTPPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TSTPPacket&);

  public:
    TSTPPacket(const char *name=NULL, int kind=0);
    TSTPPacket(const TSTPPacket& other);
    virtual ~TSTPPacket();
    TSTPPacket& operator=(const TSTPPacket& other);
    virtual TSTPPacket *dup() const {return new TSTPPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getDataArraySize() const;
    virtual char getData(unsigned int k) const;
    virtual void setData(unsigned int k, char data);
};

inline void doPacking(cCommBuffer *b, TSTPPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, TSTPPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _TSTPPACKET_M_H_

